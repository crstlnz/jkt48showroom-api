name: Deploy to Server

on:
  push:
    branches:
      - main # Change this to your deployment branch
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      SSH_PRIVATE_KEY: ${{ secrets.DEPLOY_PRIVATE_KEY }} # Add your SSH key to GitHub secrets
      SERVER_USER: ${{ secrets.DEPLOY_USERNAME }} # Add your server username to GitHub secrets
      SERVER_IP: ${{ secrets.DEPLOY_SERVER_IP }} # Add your server IP to GitHub secrets
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 9
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Build
        run: pnpm build

      - name: Setup SSH Key
        run: echo "$SSH_PRIVATE_KEY" > private_key && chmod 600 private_key
      
      - name: Create directory and clone repository on remote server
        run: |
          ssh -o StrictHostKeyChecking=no -i private_key $SERVER_USER@$SERVER_IP "
            # Buat folder menggunakan variabel
            mkdir -p ${{ vars.DEPLOY_APP_DIR }}
            echo \"Created directory: ${{ vars.DEPLOY_APP_DIR }}\"
            
            # Masuk ke folder
            cd ${{ vars.DEPLOY_APP_DIR }}
            
            # Clone atau update repository
            if [ ! -d '.git' ]; then
              echo \"Cloning repository to ${{ vars.DEPLOY_APP_DIR }}...\"
              git clone https://github.com/crstlnz/jkt48showroom-api.git .
            else
              echo \"Repository exists, pulling latest changes...\"
              git stash && git pull origin main
            fi
            
            echo \"Repository setup completed at ${{ vars.DEPLOY_APP_DIR }}\"
          "

      # - name: SSH and Pull Latest Code
      #   run: ssh -o StrictHostKeyChecking=no -i private_key $SERVER_USER@$SERVER_IP "cd ${{ vars.DEPLOY_APP_DIR }} && git stash && git pull"

      - name: Install package.json
        run: ssh -o StrictHostKeyChecking=no -i private_key $SERVER_USER@$SERVER_IP "cd ${{ vars.DEPLOY_APP_DIR }} && pnpm i"
          
      - name: Zip Build Files
        run: zip -r output.zip ./.output

      - name: Upload and Unzip Build Files
        run: |
          scp -o StrictHostKeyChecking=no -i private_key output.zip $SERVER_USER@$SERVER_IP:${{ vars.DEPLOY_APP_DIR }}
          ssh -o StrictHostKeyChecking=no -i private_key $SERVER_USER@$SERVER_IP "
            cd ${{ vars.DEPLOY_APP_DIR }} &&
            unzip -o output.zip &&
            rm output.zip
          "

      - name: Run with PM2
        run: ssh -o StrictHostKeyChecking=no -i private_key $SERVER_USER@$SERVER_IP "cd ${{ vars.DEPLOY_APP_DIR }} && pm2 startOrRestart ecosystem.config.js && pm2 save"
      
      - name: Create Environment
        uses: mkyai/env-builder@v1.1.1
        with:
          secrets: ${{ toJson(secrets) }}
          variables: ${{ toJson(vars) }}

      - name: Copy .env file
        run: scp -o StrictHostKeyChecking=no -i private_key ./deploy.key .env $SERVER_USER@$SERVER_IP:${{ vars.DEPLOY_APP_DIR }}